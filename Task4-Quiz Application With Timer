<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Quiz Application With Timer</title> <!-- Title Updated -->
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #eef2f3;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
    }

    .quiz-container {
      background: #fff;
      padding: 30px;
      border-radius: 15px;
      width: 500px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.2);
      text-align: center;
    }

    h1, h2 {
      margin-bottom: 15px;
    }

    #start-btn {
      padding: 10px 25px;
      font-size: 16px;
      background-color: #007bff;
      color: white;
      border: none;
      border-radius: 8px;
      cursor: pointer;
    }

    #start-btn:hover {
      background-color: #0056b3;
    }

    ul {
      list-style-type: none;
      padding: 0;
      text-align: left;
    }

    li {
      margin: 10px 0;
    }

    button {
      margin-top: 15px;
      padding: 10px 20px;
      background: #28a745;
      color: white;
      border: none;
      border-radius: 8px;
      cursor: pointer;
    }

    #timer {
      color: #ff3333;
      font-weight: bold;
    }

    #scoreboard {
      font-weight: bold;
      color: #333;
      margin: 10px 0;
    }

    #result {
      margin-top: 0;
      text-align: left;
      max-width: 480px;
      margin-left: auto;
      margin-right: auto;
      padding: 20px;
      background-color: #fff;
      border-radius: 15px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.2);
    }

    .hidden {
      display: none;
    }

    .correct {
      background-color: #d4edda;
      border-left: 5px solid #28a745;
      padding: 10px;
      margin-bottom: 10px;
    }

    .incorrect {
      background-color: #f8d7da;
      border-left: 5px solid #dc3545;
      padding: 10px;
      margin-bottom: 10px;
    }

    #level-label {
      margin-bottom: 10px;
      font-weight: bold;
    }

    body.result-shown {
      display: flex !important;
      justify-content: center !important;
      align-items: center !important;
      height: 100vh !important;
      background: #eef2f3;
      margin: 0;
    }
  </style>
</head>
<body>
  <div class="quiz-container">
    <h1 id="main-heading">Quiz Application With Timer</h1> <!-- Heading Updated -->
    <button id="start-btn" onclick="startQuiz()">Start Quiz</button>

    <div id="quiz-box" class="hidden">
      <div id="level-label">Level: Easy</div>
      <h2 id="question"></h2>
      <div id="timer">Time: 10</div>
      <div id="scoreboard">Score: 0</div>
      <ul id="options"></ul>
      <button onclick="submitAnswer()">Submit</button>
    </div>

    <div id="result"></div>
  </div>

  <script>
    const levels = {
      "Easy": [
        {
          question: "Which keyword is used to declare a class in Java?",
          options: ["function", "void", "class", "object"],
          answer: "class"
        },
        {
          question: "What is the size of an int variable in Java?",
          options: ["4 bytes", "2 bytes", "8 bytes", "Depends on OS"],
          answer: "4 bytes"
        }
      ],
      "Medium": [
        {
          question: "Which collection class allows you to grow or shrink its size and provides indexed access to its elements?",
          options: ["ArrayList", "LinkedList", "HashMap", "TreeSet"],
          answer: "ArrayList"
        },
        {
          question: "What is the default value of a boolean in Java?",
          options: ["true", "false", "0", "null"],
          answer: "false"
        }
      ],
      "Hard": [
        {
          question: "Which method must be implemented by a class implementing the Runnable interface?",
          options: ["start()", "run()", "execute()", "main()"],
          answer: "run()"
        },
        {
          question: "Which concept of Java is achieved by combining methods and attributes into a class?",
          options: ["Inheritance", "Encapsulation", "Abstraction", "Polymorphism"],
          answer: "Encapsulation"
        }
      ]
    };

    const levelNames = Object.keys(levels);
    let currentLevelIndex = 0;
    let currentQuestionIndex = 0;
    let score = 0;
    let timeLeft = 10;
    let timer;
    let userAnswers = [];

    function startQuiz() {
      document.getElementById("start-btn").style.display = "none";
      document.getElementById("main-heading").style.display = "none";
      document.getElementById("quiz-box").classList.remove("hidden");
      showQuestion();
    }

    function showQuestion() {
      const currentLevel = levelNames[currentLevelIndex];
      const questions = levels[currentLevel];
      const question = questions[currentQuestionIndex];

      document.getElementById("level-label").innerText = `Level: ${currentLevel}`;
      document.getElementById("question").innerText = question.question;

      const optionsList = document.getElementById("options");
      optionsList.innerHTML = "";
      question.options.forEach(option => {
        const li = document.createElement("li");
        li.innerHTML = `<label><input type="radio" name="option" value="${option}"/> ${option}</label>`;
        optionsList.appendChild(li);
      });

      document.getElementById("scoreboard").innerText = `Score: ${score}`;
      timeLeft = 10;
      document.getElementById("timer").innerText = `Time: ${timeLeft}`;
      clearInterval(timer);
      timer = setInterval(countdown, 1000);
    }

    function countdown() {
      timeLeft--;
      document.getElementById("timer").innerText = `Time: ${timeLeft}`;
      if (timeLeft === 0) {
        clearInterval(timer);
        submitAnswer();
      }
    }

    function submitAnswer() {
      clearInterval(timer);
      const selected = document.querySelector('input[name="option"]:checked');
      const currentLevel = levelNames[currentLevelIndex];
      const question = levels[currentLevel][currentQuestionIndex];
      const userAnswer = selected ? selected.value : "No answer";

      userAnswers.push({
        question: question.question,
        correct: question.answer,
        selected: userAnswer
      });

      if (userAnswer === question.answer) score++;

      currentQuestionIndex++;

      const isEndOfLevel = currentQuestionIndex >= levels[currentLevel].length;
      if (isEndOfLevel) {
        currentLevelIndex++;
        currentQuestionIndex = 0;
      }

      if (currentLevelIndex < levelNames.length) {
        showQuestion();
      } else {
        showResult();
      }
    }

    function showResult() {
      document.getElementById("quiz-box").classList.add("hidden");
      document.body.classList.add("result-shown");

      let summary = `<h2 style="text-align:center;">Scoreboard</h2><h3 style="text-align:center;">Your Final Score: ${score}/${userAnswers.length}</h3>`;
      userAnswers.forEach((q, i) => {
        const isCorrect = q.correct === q.selected;
        summary += `
          <div class="${isCorrect ? "correct" : "incorrect"}">
            <strong>Q${i + 1}: ${q.question}</strong><br/>
            Your Answer: <strong>${q.selected}</strong><br/>
            Correct Answer: <strong>${q.correct}</strong>
          </div>
        `;
      });

      document.getElementById("result").innerHTML = summary;
    }
  </script>
</body>
</html>
